{"remainingRequest":"/Users/scott/Documents/GitHub/web/node_modules/babel-loader/lib/index.js!/Users/scott/Documents/GitHub/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/scott/Documents/GitHub/web/src/components/Hash.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/scott/Documents/GitHub/web/src/components/Hash.vue","mtime":1527583216509},{"path":"/Users/scott/Documents/GitHub/web/node_modules/cache-loader/dist/cjs.js","mtime":1527554738917},{"path":"/Users/scott/Documents/GitHub/web/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/scott/Documents/GitHub/web/node_modules/vue-loader/lib/index.js","mtime":1526676097000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport secp256k1 from 'secp256k1/elliptic';\nimport crypto from 'crypto';\nimport keccak from 'keccak';\nimport bip39 from 'bip39';\nexport default {\n  name: 'Hash',\n  data: function data() {\n    return {\n      msg: '',\n      title: '',\n      mnemonic: '',\n      privateKey: '',\n      publicKey: '',\n      address: '',\n      items: []\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.make();\n    console.log('begin');\n  },\n  methods: {\n    make: function make(event) {\n      var mnemonic = bip39.generateMnemonic();\n      this.mnemonic = mnemonic;\n      var privateKey = crypto.randomBytes(32);\n      var publicKey = secp256k1.publicKeyCreate(privateKey, false).slice(1);\n      var address = keccak(\"keccak256\").update(publicKey).digest().slice(-20);\n      this.privateKey = privateKey.toString('hex');\n      this.address = address.toString('hex');\n    },\n    onCopy: function onCopy(e) {\n      alert('You just copied: ' + e.text);\n    },\n    onError: function onError(e) {\n      alert('Failed to copy texts');\n    }\n  }\n};",{"version":3,"sources":["Hash.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,SAAA,MAAA,oBAAA;AAEA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,QAAA,MADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,WAAA,EADA;AAEA,aAAA,EAFA;AAGA,gBAAA,EAHA;AAIA,kBAAA,EAJA;AAKA,iBAAA,EALA;AAMA,eAAA,EANA;AAOA,aAAA;AAPA,KAAA;AASA,GAZA;AAaA,SAbA,qBAaA,CACA,CAdA;AAeA,SAfA,qBAeA;AACA,SAAA,IAAA;AACA,YAAA,GAAA,CAAA,OAAA;AACA,GAlBA;AAmBA,WAAA;AACA,UAAA,cAAA,KAAA,EAAA;AACA,UAAA,WAAA,MAAA,gBAAA,EAAA;AACA,WAAA,QAAA,GAAA,QAAA;AACA,UAAA,aAAA,OAAA,WAAA,CAAA,EAAA,CAAA;AACA,UAAA,YAAA,UAAA,eAAA,CAAA,UAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,UAAA,OAAA,WAAA,EAAA,MAAA,CAAA,SAAA,EAAA,MAAA,GAAA,KAAA,CAAA,CAAA,EAAA,CAAA;AACA,WAAA,UAAA,GAAA,WAAA,QAAA,CAAA,KAAA,CAAA;AACA,WAAA,OAAA,GAAA,QAAA,QAAA,CAAA,KAAA,CAAA;AACA,KATA;AAUA,YAAA,gBAAA,CAAA,EAAA;AACA,YAAA,sBAAA,EAAA,IAAA;AACA,KAZA;AAaA,aAAA,iBAAA,CAAA,EAAA;AACA,YAAA,sBAAA;AACA;AAfA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"hello\">\n    hash\n    <h1>{{ msg }}</h1>\n    <p>privateKey:{{ mnemonic }}</p>\n    <p>privateKey:{{ privateKey }}</p>\n    <button v-on:click=\"make\">make</button>\n\n    <div class=\"container\">\n        address:<input type=\"text\" v-model=\"address\">\n        <button type=\"button\"\n            v-clipboard:copy=\"address\"\n            v-clipboard:success=\"onCopy\"\n            v-clipboard:error=\"onError\">Copy!</button>\n    </div>\n    <router-link to=\"/\">\n      home\n    </router-link>\n  </div>\n</template>\n\n<script>\nimport secp256k1 from 'secp256k1/elliptic'\n\nimport crypto from 'crypto'\nimport keccak from 'keccak'\nimport bip39 from 'bip39'\nexport default {\n  name: 'Hash',\n  data () {\n    return {\n      msg: '',\n      title:'',\n      mnemonic:'',\n      privateKey:'',\n      publicKey:'',\n      address:'',\n      items:[]\n    }\n  },\n  created(){\n  },\n    mounted(){\n        this.make();\n        console.log('begin')\n    },\n  methods:{\n      make: function (event) {\n          var mnemonic=bip39.generateMnemonic();\n          this.mnemonic=mnemonic;\n          var privateKey=crypto.randomBytes(32);\n          var publicKey = secp256k1.publicKeyCreate(privateKey, false).slice(1);\n          var address = keccak(\"keccak256\").update(publicKey).digest().slice(-20)\n          this.privateKey=privateKey.toString('hex')\n          this.address=address.toString('hex')\n      },\n      onCopy: function (e) {\n        alert('You just copied: ' + e.text)\n    },\n    onError: function (e) {\n        alert('Failed to copy texts')\n    },\n    \n    \n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":"src/components"}]}